# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@HAVE_LIBLO_TRUE@bin_PROGRAMS = dssi_osc_send$(EXEEXT) \
@HAVE_LIBLO_TRUE@	dssi_osc_update$(EXEEXT)
@HAVE_LIBLO_TRUE@@HAVE_QT_TRUE@lts_ui_PROGRAMS = LTS_qt$(EXEEXT)
@BUILD_SAMPLER_TRUE@@HAVE_LIBLO_TRUE@@HAVE_QT_TRUE@trivial_sampler_ui_PROGRAMS = trivial_sampler_qt$(EXEEXT)
subdir = examples
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(lts_uidir)" "$(DESTDIR)$(trivial_sampler_uidir)"
pluginLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(plugin_LTLIBRARIES)
karplong_la_LIBADD =
am_karplong_la_OBJECTS = karplong_la-karplong.lo
karplong_la_OBJECTS = $(am_karplong_la_OBJECTS)
karplong_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(karplong_la_CXXFLAGS) \
	$(CXXFLAGS) $(karplong_la_LDFLAGS) $(LDFLAGS) -o $@
@BUILD_SAMPLER_FALSE@am_karplong_la_rpath = -rpath $(plugindir)
@BUILD_SAMPLER_TRUE@am_karplong_la_rpath = -rpath $(plugindir)
less_trivial_synth_la_DEPENDENCIES =
am_less_trivial_synth_la_OBJECTS =  \
	less_trivial_synth_la-less_trivial_synth.lo
less_trivial_synth_la_OBJECTS = $(am_less_trivial_synth_la_OBJECTS)
less_trivial_synth_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(less_trivial_synth_la_CFLAGS) $(CFLAGS) \
	$(less_trivial_synth_la_LDFLAGS) $(LDFLAGS) -o $@
@BUILD_SAMPLER_FALSE@am_less_trivial_synth_la_rpath = -rpath \
@BUILD_SAMPLER_FALSE@	$(plugindir)
@BUILD_SAMPLER_TRUE@am_less_trivial_synth_la_rpath = -rpath \
@BUILD_SAMPLER_TRUE@	$(plugindir)
am__DEPENDENCIES_1 =
trivial_sampler_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_trivial_sampler_la_OBJECTS = trivial_sampler_la-trivial_sampler.lo
trivial_sampler_la_OBJECTS = $(am_trivial_sampler_la_OBJECTS)
trivial_sampler_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(trivial_sampler_la_CFLAGS) $(CFLAGS) \
	$(trivial_sampler_la_LDFLAGS) $(LDFLAGS) -o $@
@BUILD_SAMPLER_TRUE@am_trivial_sampler_la_rpath = -rpath $(plugindir)
trivial_synth_la_LIBADD =
am_trivial_synth_la_OBJECTS = trivial_synth_la-trivial_synth.lo
trivial_synth_la_OBJECTS = $(am_trivial_synth_la_OBJECTS)
trivial_synth_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(trivial_synth_la_CFLAGS) \
	$(CFLAGS) $(trivial_synth_la_LDFLAGS) $(LDFLAGS) -o $@
@BUILD_SAMPLER_FALSE@am_trivial_synth_la_rpath = -rpath $(plugindir)
@BUILD_SAMPLER_TRUE@am_trivial_synth_la_rpath = -rpath $(plugindir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
lts_uiPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
trivial_sampler_uiPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(lts_ui_PROGRAMS) \
	$(trivial_sampler_ui_PROGRAMS)
am_LTS_qt_OBJECTS = LTS_qt-less_trivial_synth_qt_gui.$(OBJEXT)
am__objects_1 = LTS_qt-less_trivial_synth_qt_gui.moc.$(OBJEXT)
nodist_LTS_qt_OBJECTS = $(am__objects_1)
LTS_qt_OBJECTS = $(am_LTS_qt_OBJECTS) $(nodist_LTS_qt_OBJECTS)
LTS_qt_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
LTS_qt_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dssi_osc_send_OBJECTS = dssi_osc_send-dssi_osc_send.$(OBJEXT)
dssi_osc_send_OBJECTS = $(am_dssi_osc_send_OBJECTS)
dssi_osc_send_DEPENDENCIES = $(am__DEPENDENCIES_1)
dssi_osc_send_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dssi_osc_send_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dssi_osc_update_OBJECTS =  \
	dssi_osc_update-dssi_osc_update.$(OBJEXT)
dssi_osc_update_OBJECTS = $(am_dssi_osc_update_OBJECTS)
dssi_osc_update_DEPENDENCIES = $(am__DEPENDENCIES_1)
dssi_osc_update_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dssi_osc_update_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_trivial_sampler_qt_OBJECTS =  \
	trivial_sampler_qt-trivial_sampler_qt_gui.$(OBJEXT)
am__objects_2 =  \
	trivial_sampler_qt-trivial_sampler_qt_gui.moc.$(OBJEXT)
nodist_trivial_sampler_qt_OBJECTS = $(am__objects_2)
trivial_sampler_qt_OBJECTS = $(am_trivial_sampler_qt_OBJECTS) \
	$(nodist_trivial_sampler_qt_OBJECTS)
trivial_sampler_qt_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
trivial_sampler_qt_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(karplong_la_SOURCES) $(less_trivial_synth_la_SOURCES) \
	$(trivial_sampler_la_SOURCES) $(trivial_synth_la_SOURCES) \
	$(LTS_qt_SOURCES) $(nodist_LTS_qt_SOURCES) \
	$(dssi_osc_send_SOURCES) $(dssi_osc_update_SOURCES) \
	$(trivial_sampler_qt_SOURCES) \
	$(nodist_trivial_sampler_qt_SOURCES)
DIST_SOURCES = $(karplong_la_SOURCES) $(less_trivial_synth_la_SOURCES) \
	$(trivial_sampler_la_SOURCES) $(trivial_synth_la_SOURCES) \
	$(LTS_qt_SOURCES) $(dssi_osc_send_SOURCES) \
	$(dssi_osc_update_SOURCES) $(trivial_sampler_qt_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LIBS = @JACK_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBLO_CFLAGS = @LIBLO_CFLAGS@
LIBLO_LIBS = @LIBLO_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_LIBS = @QT_LIBS@
QT_MOC = @QT_MOC@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SNDFILE_CFLAGS = @SNDFILE_CFLAGS@
SNDFILE_LIBS = @SNDFILE_LIBS@
SRC_CFLAGS = @SRC_CFLAGS@
SRC_LIBS = @SRC_LIBS@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
dssi_osc_send_SOURCES = dssi_osc_send.c
dssi_osc_send_CFLAGS = -I$(top_srcdir)/dssi $(AM_CFLAGS) $(LIBLO_CFLAGS)
dssi_osc_send_LDADD = $(AM_LDFLAGS) $(LIBLO_LIBS)
dssi_osc_update_SOURCES = dssi_osc_update.c
dssi_osc_update_CFLAGS = -I$(top_srcdir)/dssi $(AM_CFLAGS) $(LIBLO_CFLAGS)
dssi_osc_update_LDADD = $(AM_LDFLAGS) $(LIBLO_LIBS)
plugindir = $(libdir)/dssi
@BUILD_SAMPLER_FALSE@plugin_LTLIBRARIES = trivial_synth.la less_trivial_synth.la karplong.la
@BUILD_SAMPLER_TRUE@plugin_LTLIBRARIES = trivial_synth.la less_trivial_synth.la trivial_sampler.la karplong.la
trivial_synth_la_SOURCES = \
	trivial_synth.c \
	../dssi/dssi.h

less_trivial_synth_la_SOURCES = \
        less_trivial_synth.c \
	saw.h \
	../dssi/dssi.h

trivial_sampler_la_SOURCES = \
	trivial_sampler.c \
	trivial_sampler.h \
	../dssi/dssi.h

karplong_la_SOURCES = \
	karplong.cpp \
	../dssi/dssi.h

trivial_synth_la_CFLAGS = -I$(top_srcdir)/dssi $(AM_CFLAGS) $(ALSA_CFLAGS)
less_trivial_synth_la_CFLAGS = -I$(top_srcdir)/dssi $(AM_CFLAGS) $(ALSA_CFLAGS)
trivial_sampler_la_CFLAGS = -I$(top_srcdir)/dssi $(AM_CFLAGS) $(ALSA_CFLAGS) $(SNDFILE_CFLAGS) $(SRC_CFLAGS)
karplong_la_CXXFLAGS = -I$(top_srcdir)/dssi $(AM_CFLAGS) $(ALSA_CFLAGS)
trivial_synth_la_LDFLAGS = -module -avoid-version
less_trivial_synth_la_LDFLAGS = -module -avoid-version
trivial_sampler_la_LDFLAGS = -module -avoid-version
karplong_la_LDFLAGS = -module -avoid-version
@DARWIN_FALSE@less_trivial_synth_la_LIBADD = -lm
@DARWIN_TRUE@less_trivial_synth_la_LIBADD = -lm -lmx
trivial_sampler_la_LIBADD = -lpthread $(SNDFILE_LIBS) $(SRC_LIBS)
lts_uidir = $(libdir)/dssi/less_trivial_synth
LTS_MOC = less_trivial_synth_qt_gui.moc.cpp
LTS_qt_SOURCES = \
	less_trivial_synth_qt_gui.cpp \
	less_trivial_synth_qt_gui.h

nodist_LTS_qt_SOURCES = $(LTS_MOC)
LTS_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_CXXFLAGS) $(LIBLO_CFLAGS)
LTS_qt_LDADD = $(AM_LDFLAGS) $(QT_LIBS) $(LIBLO_LIBS)
trivial_sampler_uidir = $(libdir)/dssi/trivial_sampler
trivial_sampler_MOC = trivial_sampler_qt_gui.moc.cpp
trivial_sampler_qt_SOURCES = \
	trivial_sampler_qt_gui.cpp \
	trivial_sampler_qt_gui.h \
	../dssi/dssi.h

nodist_trivial_sampler_qt_SOURCES = $(trivial_sampler_MOC)
trivial_sampler_qt_CXXFLAGS = $(AM_CXXFLAGS) -I$(top_srcdir)/dssi $(ALSA_CFLAGS) $(QT_CXXFLAGS) $(LIBLO_CFLAGS) $(SNDFILE_CFLAGS)
trivial_sampler_qt_LDADD = $(AM_LDFLAGS) $(QT_LIBS) $(LIBLO_LIBS) $(SNDFILE_LIBS)
@HAVE_QT_FALSE@BUILT_SOURCES = 
@HAVE_QT_TRUE@BUILT_SOURCES = $(LTS_MOC) $(trivial_sampler_MOC)
CLEANFILES = $(BUILT_SOURCES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  examples/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(plugindir)" || $(MKDIR_P) "$(DESTDIR)$(plugindir)"
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(plugindir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(plugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$p"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
karplong.la: $(karplong_la_OBJECTS) $(karplong_la_DEPENDENCIES) 
	$(karplong_la_LINK) $(am_karplong_la_rpath) $(karplong_la_OBJECTS) $(karplong_la_LIBADD) $(LIBS)
less_trivial_synth.la: $(less_trivial_synth_la_OBJECTS) $(less_trivial_synth_la_DEPENDENCIES) 
	$(less_trivial_synth_la_LINK) $(am_less_trivial_synth_la_rpath) $(less_trivial_synth_la_OBJECTS) $(less_trivial_synth_la_LIBADD) $(LIBS)
trivial_sampler.la: $(trivial_sampler_la_OBJECTS) $(trivial_sampler_la_DEPENDENCIES) 
	$(trivial_sampler_la_LINK) $(am_trivial_sampler_la_rpath) $(trivial_sampler_la_OBJECTS) $(trivial_sampler_la_LIBADD) $(LIBS)
trivial_synth.la: $(trivial_synth_la_OBJECTS) $(trivial_synth_la_DEPENDENCIES) 
	$(trivial_synth_la_LINK) $(am_trivial_synth_la_rpath) $(trivial_synth_la_OBJECTS) $(trivial_synth_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-lts_uiPROGRAMS: $(lts_ui_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(lts_uidir)" || $(MKDIR_P) "$(DESTDIR)$(lts_uidir)"
	@list='$(lts_ui_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(lts_uiPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(lts_uidir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(lts_uiPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(lts_uidir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-lts_uiPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(lts_ui_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(lts_uidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(lts_uidir)/$$f"; \
	done

clean-lts_uiPROGRAMS:
	@list='$(lts_ui_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-trivial_sampler_uiPROGRAMS: $(trivial_sampler_ui_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(trivial_sampler_uidir)" || $(MKDIR_P) "$(DESTDIR)$(trivial_sampler_uidir)"
	@list='$(trivial_sampler_ui_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(trivial_sampler_uiPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(trivial_sampler_uidir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(trivial_sampler_uiPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(trivial_sampler_uidir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-trivial_sampler_uiPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(trivial_sampler_ui_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(trivial_sampler_uidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(trivial_sampler_uidir)/$$f"; \
	done

clean-trivial_sampler_uiPROGRAMS:
	@list='$(trivial_sampler_ui_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
LTS_qt$(EXEEXT): $(LTS_qt_OBJECTS) $(LTS_qt_DEPENDENCIES) 
	@rm -f LTS_qt$(EXEEXT)
	$(LTS_qt_LINK) $(LTS_qt_OBJECTS) $(LTS_qt_LDADD) $(LIBS)
dssi_osc_send$(EXEEXT): $(dssi_osc_send_OBJECTS) $(dssi_osc_send_DEPENDENCIES) 
	@rm -f dssi_osc_send$(EXEEXT)
	$(dssi_osc_send_LINK) $(dssi_osc_send_OBJECTS) $(dssi_osc_send_LDADD) $(LIBS)
dssi_osc_update$(EXEEXT): $(dssi_osc_update_OBJECTS) $(dssi_osc_update_DEPENDENCIES) 
	@rm -f dssi_osc_update$(EXEEXT)
	$(dssi_osc_update_LINK) $(dssi_osc_update_OBJECTS) $(dssi_osc_update_LDADD) $(LIBS)
trivial_sampler_qt$(EXEEXT): $(trivial_sampler_qt_OBJECTS) $(trivial_sampler_qt_DEPENDENCIES) 
	@rm -f trivial_sampler_qt$(EXEEXT)
	$(trivial_sampler_qt_LINK) $(trivial_sampler_qt_OBJECTS) $(trivial_sampler_qt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dssi_osc_send-dssi_osc_send.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dssi_osc_update-dssi_osc_update.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karplong_la-karplong.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/less_trivial_synth_la-less_trivial_synth.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trivial_sampler_la-trivial_sampler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trivial_synth_la-trivial_synth.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

less_trivial_synth_la-less_trivial_synth.lo: less_trivial_synth.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(less_trivial_synth_la_CFLAGS) $(CFLAGS) -MT less_trivial_synth_la-less_trivial_synth.lo -MD -MP -MF $(DEPDIR)/less_trivial_synth_la-less_trivial_synth.Tpo -c -o less_trivial_synth_la-less_trivial_synth.lo `test -f 'less_trivial_synth.c' || echo '$(srcdir)/'`less_trivial_synth.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/less_trivial_synth_la-less_trivial_synth.Tpo $(DEPDIR)/less_trivial_synth_la-less_trivial_synth.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='less_trivial_synth.c' object='less_trivial_synth_la-less_trivial_synth.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(less_trivial_synth_la_CFLAGS) $(CFLAGS) -c -o less_trivial_synth_la-less_trivial_synth.lo `test -f 'less_trivial_synth.c' || echo '$(srcdir)/'`less_trivial_synth.c

trivial_sampler_la-trivial_sampler.lo: trivial_sampler.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_la_CFLAGS) $(CFLAGS) -MT trivial_sampler_la-trivial_sampler.lo -MD -MP -MF $(DEPDIR)/trivial_sampler_la-trivial_sampler.Tpo -c -o trivial_sampler_la-trivial_sampler.lo `test -f 'trivial_sampler.c' || echo '$(srcdir)/'`trivial_sampler.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/trivial_sampler_la-trivial_sampler.Tpo $(DEPDIR)/trivial_sampler_la-trivial_sampler.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='trivial_sampler.c' object='trivial_sampler_la-trivial_sampler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_la_CFLAGS) $(CFLAGS) -c -o trivial_sampler_la-trivial_sampler.lo `test -f 'trivial_sampler.c' || echo '$(srcdir)/'`trivial_sampler.c

trivial_synth_la-trivial_synth.lo: trivial_synth.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_synth_la_CFLAGS) $(CFLAGS) -MT trivial_synth_la-trivial_synth.lo -MD -MP -MF $(DEPDIR)/trivial_synth_la-trivial_synth.Tpo -c -o trivial_synth_la-trivial_synth.lo `test -f 'trivial_synth.c' || echo '$(srcdir)/'`trivial_synth.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/trivial_synth_la-trivial_synth.Tpo $(DEPDIR)/trivial_synth_la-trivial_synth.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='trivial_synth.c' object='trivial_synth_la-trivial_synth.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_synth_la_CFLAGS) $(CFLAGS) -c -o trivial_synth_la-trivial_synth.lo `test -f 'trivial_synth.c' || echo '$(srcdir)/'`trivial_synth.c

dssi_osc_send-dssi_osc_send.o: dssi_osc_send.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_send_CFLAGS) $(CFLAGS) -MT dssi_osc_send-dssi_osc_send.o -MD -MP -MF $(DEPDIR)/dssi_osc_send-dssi_osc_send.Tpo -c -o dssi_osc_send-dssi_osc_send.o `test -f 'dssi_osc_send.c' || echo '$(srcdir)/'`dssi_osc_send.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/dssi_osc_send-dssi_osc_send.Tpo $(DEPDIR)/dssi_osc_send-dssi_osc_send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dssi_osc_send.c' object='dssi_osc_send-dssi_osc_send.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_send_CFLAGS) $(CFLAGS) -c -o dssi_osc_send-dssi_osc_send.o `test -f 'dssi_osc_send.c' || echo '$(srcdir)/'`dssi_osc_send.c

dssi_osc_send-dssi_osc_send.obj: dssi_osc_send.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_send_CFLAGS) $(CFLAGS) -MT dssi_osc_send-dssi_osc_send.obj -MD -MP -MF $(DEPDIR)/dssi_osc_send-dssi_osc_send.Tpo -c -o dssi_osc_send-dssi_osc_send.obj `if test -f 'dssi_osc_send.c'; then $(CYGPATH_W) 'dssi_osc_send.c'; else $(CYGPATH_W) '$(srcdir)/dssi_osc_send.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/dssi_osc_send-dssi_osc_send.Tpo $(DEPDIR)/dssi_osc_send-dssi_osc_send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dssi_osc_send.c' object='dssi_osc_send-dssi_osc_send.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_send_CFLAGS) $(CFLAGS) -c -o dssi_osc_send-dssi_osc_send.obj `if test -f 'dssi_osc_send.c'; then $(CYGPATH_W) 'dssi_osc_send.c'; else $(CYGPATH_W) '$(srcdir)/dssi_osc_send.c'; fi`

dssi_osc_update-dssi_osc_update.o: dssi_osc_update.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_update_CFLAGS) $(CFLAGS) -MT dssi_osc_update-dssi_osc_update.o -MD -MP -MF $(DEPDIR)/dssi_osc_update-dssi_osc_update.Tpo -c -o dssi_osc_update-dssi_osc_update.o `test -f 'dssi_osc_update.c' || echo '$(srcdir)/'`dssi_osc_update.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/dssi_osc_update-dssi_osc_update.Tpo $(DEPDIR)/dssi_osc_update-dssi_osc_update.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dssi_osc_update.c' object='dssi_osc_update-dssi_osc_update.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_update_CFLAGS) $(CFLAGS) -c -o dssi_osc_update-dssi_osc_update.o `test -f 'dssi_osc_update.c' || echo '$(srcdir)/'`dssi_osc_update.c

dssi_osc_update-dssi_osc_update.obj: dssi_osc_update.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_update_CFLAGS) $(CFLAGS) -MT dssi_osc_update-dssi_osc_update.obj -MD -MP -MF $(DEPDIR)/dssi_osc_update-dssi_osc_update.Tpo -c -o dssi_osc_update-dssi_osc_update.obj `if test -f 'dssi_osc_update.c'; then $(CYGPATH_W) 'dssi_osc_update.c'; else $(CYGPATH_W) '$(srcdir)/dssi_osc_update.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/dssi_osc_update-dssi_osc_update.Tpo $(DEPDIR)/dssi_osc_update-dssi_osc_update.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dssi_osc_update.c' object='dssi_osc_update-dssi_osc_update.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dssi_osc_update_CFLAGS) $(CFLAGS) -c -o dssi_osc_update-dssi_osc_update.obj `if test -f 'dssi_osc_update.c'; then $(CYGPATH_W) 'dssi_osc_update.c'; else $(CYGPATH_W) '$(srcdir)/dssi_osc_update.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

karplong_la-karplong.lo: karplong.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(karplong_la_CXXFLAGS) $(CXXFLAGS) -MT karplong_la-karplong.lo -MD -MP -MF $(DEPDIR)/karplong_la-karplong.Tpo -c -o karplong_la-karplong.lo `test -f 'karplong.cpp' || echo '$(srcdir)/'`karplong.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/karplong_la-karplong.Tpo $(DEPDIR)/karplong_la-karplong.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='karplong.cpp' object='karplong_la-karplong.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(karplong_la_CXXFLAGS) $(CXXFLAGS) -c -o karplong_la-karplong.lo `test -f 'karplong.cpp' || echo '$(srcdir)/'`karplong.cpp

LTS_qt-less_trivial_synth_qt_gui.o: less_trivial_synth_qt_gui.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -MT LTS_qt-less_trivial_synth_qt_gui.o -MD -MP -MF $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Tpo -c -o LTS_qt-less_trivial_synth_qt_gui.o `test -f 'less_trivial_synth_qt_gui.cpp' || echo '$(srcdir)/'`less_trivial_synth_qt_gui.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Tpo $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='less_trivial_synth_qt_gui.cpp' object='LTS_qt-less_trivial_synth_qt_gui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -c -o LTS_qt-less_trivial_synth_qt_gui.o `test -f 'less_trivial_synth_qt_gui.cpp' || echo '$(srcdir)/'`less_trivial_synth_qt_gui.cpp

LTS_qt-less_trivial_synth_qt_gui.obj: less_trivial_synth_qt_gui.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -MT LTS_qt-less_trivial_synth_qt_gui.obj -MD -MP -MF $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Tpo -c -o LTS_qt-less_trivial_synth_qt_gui.obj `if test -f 'less_trivial_synth_qt_gui.cpp'; then $(CYGPATH_W) 'less_trivial_synth_qt_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/less_trivial_synth_qt_gui.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Tpo $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='less_trivial_synth_qt_gui.cpp' object='LTS_qt-less_trivial_synth_qt_gui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -c -o LTS_qt-less_trivial_synth_qt_gui.obj `if test -f 'less_trivial_synth_qt_gui.cpp'; then $(CYGPATH_W) 'less_trivial_synth_qt_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/less_trivial_synth_qt_gui.cpp'; fi`

LTS_qt-less_trivial_synth_qt_gui.moc.o: less_trivial_synth_qt_gui.moc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -MT LTS_qt-less_trivial_synth_qt_gui.moc.o -MD -MP -MF $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Tpo -c -o LTS_qt-less_trivial_synth_qt_gui.moc.o `test -f 'less_trivial_synth_qt_gui.moc.cpp' || echo '$(srcdir)/'`less_trivial_synth_qt_gui.moc.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Tpo $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='less_trivial_synth_qt_gui.moc.cpp' object='LTS_qt-less_trivial_synth_qt_gui.moc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -c -o LTS_qt-less_trivial_synth_qt_gui.moc.o `test -f 'less_trivial_synth_qt_gui.moc.cpp' || echo '$(srcdir)/'`less_trivial_synth_qt_gui.moc.cpp

LTS_qt-less_trivial_synth_qt_gui.moc.obj: less_trivial_synth_qt_gui.moc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -MT LTS_qt-less_trivial_synth_qt_gui.moc.obj -MD -MP -MF $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Tpo -c -o LTS_qt-less_trivial_synth_qt_gui.moc.obj `if test -f 'less_trivial_synth_qt_gui.moc.cpp'; then $(CYGPATH_W) 'less_trivial_synth_qt_gui.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/less_trivial_synth_qt_gui.moc.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Tpo $(DEPDIR)/LTS_qt-less_trivial_synth_qt_gui.moc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='less_trivial_synth_qt_gui.moc.cpp' object='LTS_qt-less_trivial_synth_qt_gui.moc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LTS_qt_CXXFLAGS) $(CXXFLAGS) -c -o LTS_qt-less_trivial_synth_qt_gui.moc.obj `if test -f 'less_trivial_synth_qt_gui.moc.cpp'; then $(CYGPATH_W) 'less_trivial_synth_qt_gui.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/less_trivial_synth_qt_gui.moc.cpp'; fi`

trivial_sampler_qt-trivial_sampler_qt_gui.o: trivial_sampler_qt_gui.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -MT trivial_sampler_qt-trivial_sampler_qt_gui.o -MD -MP -MF $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Tpo -c -o trivial_sampler_qt-trivial_sampler_qt_gui.o `test -f 'trivial_sampler_qt_gui.cpp' || echo '$(srcdir)/'`trivial_sampler_qt_gui.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Tpo $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='trivial_sampler_qt_gui.cpp' object='trivial_sampler_qt-trivial_sampler_qt_gui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -c -o trivial_sampler_qt-trivial_sampler_qt_gui.o `test -f 'trivial_sampler_qt_gui.cpp' || echo '$(srcdir)/'`trivial_sampler_qt_gui.cpp

trivial_sampler_qt-trivial_sampler_qt_gui.obj: trivial_sampler_qt_gui.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -MT trivial_sampler_qt-trivial_sampler_qt_gui.obj -MD -MP -MF $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Tpo -c -o trivial_sampler_qt-trivial_sampler_qt_gui.obj `if test -f 'trivial_sampler_qt_gui.cpp'; then $(CYGPATH_W) 'trivial_sampler_qt_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/trivial_sampler_qt_gui.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Tpo $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='trivial_sampler_qt_gui.cpp' object='trivial_sampler_qt-trivial_sampler_qt_gui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -c -o trivial_sampler_qt-trivial_sampler_qt_gui.obj `if test -f 'trivial_sampler_qt_gui.cpp'; then $(CYGPATH_W) 'trivial_sampler_qt_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/trivial_sampler_qt_gui.cpp'; fi`

trivial_sampler_qt-trivial_sampler_qt_gui.moc.o: trivial_sampler_qt_gui.moc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -MT trivial_sampler_qt-trivial_sampler_qt_gui.moc.o -MD -MP -MF $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Tpo -c -o trivial_sampler_qt-trivial_sampler_qt_gui.moc.o `test -f 'trivial_sampler_qt_gui.moc.cpp' || echo '$(srcdir)/'`trivial_sampler_qt_gui.moc.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Tpo $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='trivial_sampler_qt_gui.moc.cpp' object='trivial_sampler_qt-trivial_sampler_qt_gui.moc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -c -o trivial_sampler_qt-trivial_sampler_qt_gui.moc.o `test -f 'trivial_sampler_qt_gui.moc.cpp' || echo '$(srcdir)/'`trivial_sampler_qt_gui.moc.cpp

trivial_sampler_qt-trivial_sampler_qt_gui.moc.obj: trivial_sampler_qt_gui.moc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -MT trivial_sampler_qt-trivial_sampler_qt_gui.moc.obj -MD -MP -MF $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Tpo -c -o trivial_sampler_qt-trivial_sampler_qt_gui.moc.obj `if test -f 'trivial_sampler_qt_gui.moc.cpp'; then $(CYGPATH_W) 'trivial_sampler_qt_gui.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/trivial_sampler_qt_gui.moc.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Tpo $(DEPDIR)/trivial_sampler_qt-trivial_sampler_qt_gui.moc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='trivial_sampler_qt_gui.moc.cpp' object='trivial_sampler_qt-trivial_sampler_qt_gui.moc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trivial_sampler_qt_CXXFLAGS) $(CXXFLAGS) -c -o trivial_sampler_qt-trivial_sampler_qt_gui.moc.obj `if test -f 'trivial_sampler_qt_gui.moc.cpp'; then $(CYGPATH_W) 'trivial_sampler_qt_gui.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/trivial_sampler_qt_gui.moc.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(lts_uidir)" "$(DESTDIR)$(trivial_sampler_uidir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-lts_uiPROGRAMS clean-pluginLTLIBRARIES \
	clean-trivial_sampler_uiPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-lts_uiPROGRAMS install-pluginLTLIBRARIES \
	install-trivial_sampler_uiPROGRAMS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-lts_uiPROGRAMS \
	uninstall-pluginLTLIBRARIES \
	uninstall-trivial_sampler_uiPROGRAMS

.MAKE: install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-lts_uiPROGRAMS \
	clean-pluginLTLIBRARIES clean-trivial_sampler_uiPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am \
	install-lts_uiPROGRAMS install-man install-pdf install-pdf-am \
	install-pluginLTLIBRARIES install-ps install-ps-am \
	install-strip install-trivial_sampler_uiPROGRAMS installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-lts_uiPROGRAMS uninstall-pluginLTLIBRARIES \
	uninstall-trivial_sampler_uiPROGRAMS


%.moc.cpp: %.h
	$(QT_MOC) -o $@ $<

# create symlinks for each plugin to jack-dssi-host
install-exec-hook:
	if test -x $(DESTDIR)$(bindir)/jack-dssi-host$(EXEEXT) ; then \
	  cd $(DESTDIR)$(bindir) ; \
	  if ! test -x ./trivial_synth$(EXEEXT) ; then \
	    $(LN_S) jack-dssi-host$(EXEEXT) trivial_synth$(EXEEXT) ; \
	  fi ; \
	  if ! test -x ./less_trivial_synth$(EXEEXT) ; then \
	    $(LN_S) jack-dssi-host$(EXEEXT) less_trivial_synth$(EXEEXT) ; \
	  fi ; \
	  if ! test -x ./trivial_sampler$(EXEEXT) ; then \
	    $(LN_S) jack-dssi-host$(EXEEXT) trivial_sampler$(EXEEXT) ; \
	  fi ; \
	  if ! test -x ./karplong$(EXEEXT) ; then \
	    $(LN_S) jack-dssi-host$(EXEEXT) karplong$(EXEEXT) ; \
	  fi ; \
	fi
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
